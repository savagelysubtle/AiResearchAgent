{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "MCP Server Configuration Schema",
  "description": "Schema for validating MCP server configuration files",
  "type": "object",
  "required": ["mcp_servers", "global_settings"],
  "properties": {
    "mcp_servers": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z0-9_-]+$": {
          "type": "object",
          "required": ["name", "description", "transport", "enabled"],
          "properties": {
            "name": {
              "type": "string",
              "description": "Human-readable name for the MCP server"
            },
            "description": {
              "type": "string",
              "description": "Description of the server's purpose and capabilities"
            },
            "transport": {
              "type": "object",
              "required": ["type", "command"],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["stdio", "sse", "websocket"],
                  "description": "Transport mechanism for MCP communication"
                },
                "command": {
                  "type": "string",
                  "description": "Command to start the MCP server"
                },
                "args": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Command line arguments for the server"
                },
                "working_directory": {
                  "type": "string",
                  "description": "Working directory for the server process"
                },
                "env": {
                  "type": "object",
                  "patternProperties": {
                    "^[A-Z_][A-Z0-9_]*$": {
                      "type": "string"
                    }
                  },
                  "description": "Environment variables for the server"
                }
              }
            },
            "enabled": {
              "type": "boolean",
              "description": "Whether this server is enabled"
            },
            "tools": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of tools provided by this server"
            },
            "resources": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of resources provided by this server"
            },
            "prompts": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of prompts provided by this server"
            },
            "notes": {
              "type": "string",
              "description": "Additional notes about this server configuration"
            }
          }
        }
      }
    },
    "global_settings": {
      "type": "object",
      "properties": {
        "timeout_seconds": {
          "type": "integer",
          "minimum": 1,
          "maximum": 3600,
          "description": "Default timeout for MCP operations in seconds"
        },
        "max_retries": {
          "type": "integer",
          "minimum": 0,
          "maximum": 10,
          "description": "Maximum number of retries for failed operations"
        },
        "log_level": {
          "type": "string",
          "enum": ["DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"],
          "description": "Logging level for MCP operations"
        },
        "enable_caching": {
          "type": "boolean",
          "description": "Whether to enable caching of MCP responses"
        },
        "cache_ttl_seconds": {
          "type": "integer",
          "minimum": 60,
          "description": "Time-to-live for cached responses in seconds"
        }
      }
    }
  }
}
